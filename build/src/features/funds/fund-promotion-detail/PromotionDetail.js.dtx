import React, { Component } from "react";
import { TouchableOpacity } from '@dynatrace/react-native-plugin/lib/react-native/';
import { Platform, ScrollView, View } from "react-native";
import I18n from "react-native-i18n";
import PropTypes from "prop-types";
import styled from "styled-components/native";
import { trackEvent } from "../../../modules/analytics/AnalyticsService";
import {
  FUND_PROMOTION_USE_NOW,
  FUND_PROMOTION_CANCEL
} from "../../../modules/analytics/analytics-constants";

import Theme from "../../../theme";
import {
  Body2,
  Body3,
  Display2,
  Header2,
  HeroBannerImage,
  Icon,
  PrimaryButton,
  SecondaryButton
} from "../../../components-2";

const HeroHeaderContainer = styled.View`
  min-height: 50px;
`;

const HeroBannerContainer = styled.View`
  flex: 1;
  flex-direction: row;
  min-height: 50px;
`;

const EmptryImageBanner = styled.View`
  background-color: grey;
  min-height: 200px;
`;

const ButtonContainer = styled.View`
  flex: 1;
  min-width: 14;
  align-self: flex-start;
`;

const LeftButton = styled(TouchableOpacity)`
  width: 50px;
  border-width: 0px;
  border-radius: 0px;
  padding-top: ${props => props.theme.spacingSmall};
  padding-left: ${props => props.theme.spacingMedium};
`;

const SectionContainer = styled.View`
  flex: 1;
`;

const HeaderSection = styled.View`
  padding-left: ${props => props.theme.spacingMedium};
  padding-right: ${props => props.theme.spacingMedium};
  padding-bottom: ${props => props.theme.spacingXXSmall};
`;

const ContentSection = styled(HeaderSection)`
  background-color: ${props => props.theme.backgroundLightColor};
  padding-bottom: ${props => props.theme.spacingSmall};
`;

const Row = styled.View`
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-top: ${props => props.theme.spacingSmall};
`;

const BottomView = styled.View`
  flex: 1;
  justify-content: flex-end;
  padding-bottom: ${props => props.theme.spacingMedium};
`;

const ButtonBottomContainer = styled.View`
  margin-horizontal: ${props => props.theme.spacingMedium};
  padding-top: ${props => props.theme.spacingMedium};
  margin-bottom: ${props => props.theme.spacingMedium};
`;

const BottomSpaceView = styled.View`
  flex: 1;
  padding-top: ${props => props.theme.spacingMedium};
  margin-bottom: ${props => props.theme.spacingMedium};
  margin-horizontal: ${props => props.theme.spacingMedium};
  flex-direction: row;
  justify-content: space-between;
`;

const ViewConditionColumn = styled.View`
  flex-direction: column;
  align-items: flex-start;
`;

const ViewConditionRow = styled.View`
  flex-direction: row;
  align-items: flex-start;
  flex-wrap: wrap;
  flex: 1;
`;

const ViewConditionBullet = styled.View`
  width: 15px;
`;

const ViewConditionBulletText = styled.View`
  flex: 1;
`;

const actionEventScreen = "promo_detail";

class PromotionDetail extends Component {
  handleUseNow = () => {
    const { promoItem, onViewPromotion, closePromotionDetail } = this.props;
    trackEvent(FUND_PROMOTION_USE_NOW, { screen: actionEventScreen });
    closePromotionDetail();
    onViewPromotion(promoItem);
  };
  handleClearPromoCode = () => {
    trackEvent(FUND_PROMOTION_CANCEL, { screen: actionEventScreen });
    this.props.clearPromoCode();
  };
  renderBanner = () => {
    if (this.props.bannerImagePath) {
      return <HeroBannerImage customMinHeight={98} imageUri={this.props.bannerImagePath} />;
    }
    return <EmptryImageBanner />;
  };
  renderCondition = () => {
    const { promoItem } = this.props;
    return promoItem?.condition?.map(obj => {
      return (
        // eslint-disable-next-line react/jsx-key
        (<ViewConditionColumn>
          <ViewConditionRow>
            <ViewConditionBullet>
              <Body2>{"â€¢ "}</Body2>
            </ViewConditionBullet>
            <ViewConditionBulletText>
              <Body2>{obj}</Body2>
            </ViewConditionBulletText>
          </ViewConditionRow>
        </ViewConditionColumn>)
      );
    });
  };
  renderDetail = () => {
    return (
      <SectionContainer style={{ marginTop: -10 }}>
        <ContentSection titleInset noTopBorder noBottomBorder>
          <Row>
            <Display2>{this.props.promoItem.campaign_display_name}</Display2>
          </Row>
          <Row style={{ marginTop: 0 }}>
            <Display2>{this.props.promoItem.caption}</Display2>
          </Row>
          <Row style={{ marginBottom: 10 }}>
            <Body3>{this.props.subCaption}</Body3>
          </Row>
          <Row style={{ marginTop: 0, marginBottom: -10 }}>
            <Header2>{I18n.t("FundInvest.Promotion.Detail.Description")}</Header2>
          </Row>
          <Row>
            <Body2>{this.props.promoItem.detail}</Body2>
          </Row>
          <Row>
            <Header2>{I18n.t("FundInvest.Promotion.Detail.Condition")}</Header2>
          </Row>
          {this.renderCondition()}
        </ContentSection>
      </SectionContainer>
    );
  };
  renderDefaultFundPromotion = () => {
    const { visableLater } = this.props;
    return (
      <View>
        {Platform.OS !== "android" && <HeroHeaderContainer />}
        <HeroBannerContainer>
          <ButtonContainer>
            <LeftButton onPress={() => this.props.closePromotionDetail()}>
              <Icon name="chevronLeft" color={Theme.ctaPurple} size="icon24" />
            </LeftButton>
          </ButtonContainer>
        </HeroBannerContainer>
        <ScrollView
          contentContainerStyle={{ paddingBottom: Theme.spacingFixedBottomContainerValue }}
        >
          <SectionContainer>
            {this.renderBanner()}
            {this.renderDetail()}
            {visableLater ? (
              <BottomView>
                <ButtonBottomContainer>
                  <PrimaryButton
                    size="large"
                    label={I18n.t("FundInvest.Promotion.Detail.UseNow")}
                    onPress={() => this.handleUseNow()}
                  />
                </ButtonBottomContainer>
              </BottomView>
            ) : (
              <BottomSpaceView>
                <SecondaryButton
                  label={I18n.t("FundInvest.Promotion.Detail.ButtonLater")}
                  size="large"
                  style={{ width: "47%" }}
                  onPress={() => this.handleClearPromoCode()}
                />
                <PrimaryButton
                  label={I18n.t("FundInvest.Promotion.Detail.ButtonOK")}
                  size="large"
                  style={{ width: "47%" }}
                  onPress={() => this.props.closePromotionDetail()}
                />
              </BottomSpaceView>
            )}
          </SectionContainer>
        </ScrollView>
      </View>
    );
  };

  render() {
    return this.renderDefaultFundPromotion();
  }
}

PromotionDetail.defaultProps = {
  promoItem: {},
  subCaption: "",
  bannerImagePath: "",
  visableLater: false,
  onViewPromotion: () => {},
  clearPromoCode: () => {},
  closePromotionDetail: () => {}
};
PromotionDetail.propTypes = {
  subCaption: PropTypes.string,
  bannerImagePath: PropTypes.string,
  visableLater: PropTypes.bool,
  onViewPromotion: PropTypes.func,
  clearPromoCode: PropTypes.func,
  closePromotionDetail: PropTypes.func,
  promoItem: PropTypes.oneOfType([PropTypes.array, PropTypes.object])
};

export default PromotionDetail;
